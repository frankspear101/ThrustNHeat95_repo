!*******/plotitTD/**********************************************!     Plotting Parameters for temperature-depth plot (TD)      CHARACTER xlabTD*80,ylabTD*80,pltitleTD*80      real*8 xorTD,xminTD,xmaxTD,xlenTD,yorTD,yminTD,ymaxTD,ylenTD      integer*4 nxticTD,nxdecTD,nyticTD,nydecTD,itripleplotTD,iotypeTD      common /plotitTD/xorTD,xminTD,xmaxTD,xlenTD,nxticTD,nxdecTD,xlabTD,			&     	yorTD,yminTD,ymaxTD,ylenTD,nyticTD,nydecTD,ylabTD,pltitleTD,itripleplotTD,iotypeTD!***********************************************************!*******/plotit/**********************************************!     Plotting Parameters for x-z plot!      CHARACTER xlab*80,ylab*80,pltitle*80!      real*8 xor,xmin,xmax,xlen,yor,ymin,ymax,ylen!      integer*4 nxtic,nxdec,nytic,nydec,itripleplot,iotype!      common /plotit/xor,xmin,xmax,xlen,nxtic,nxdec,xlab,		&!              yor,ymin,ymax,ylen,nytic,nydec,ylab,pltitle,itripleplot,iotype!***********************************************************!**********************************************************!      DESCRIPTION OF GRID!     Surface height is variable!     horizontal grid spacing ­ vertical grid spacing!     vertical grid spacing at surface is not the same as rest of vertical spacing!!      k monitors vertical sections!      !           NVERT = number of vertical sections (number of vertical grid points)!           gridx = grid spacing in X direction!           gridz = grid spacing in Z direction!           surface(K) = surface grid point !                 (note that sealevel is not stored at grid point 1, but is!                 offset to point = "sealevel" so that mountains can grow up!           !      ____________________________________________ sealevel = original grid point of surface (fixed for the problem)!!!!      grid_bottom is bottom of grid = fixed value!       BaseOfModel is bottom of model in meters (relative to sealevel)!      integer xGridMax,yGridMax,nModelMax      parameter (xGridMax = 320,yGridMax = 800,nModelMax = 1000)      INTEGER*4 seaLevel,gridBottom,surface(0:yGridMax),nvert,LLower(yGridMax)      real*8 gridZ,gridX,baseOfModel,qStar(yGridMax)      real*8 referenceBaseOfCrust_meters,ElevationMeters(yGridMax)      integer referenceBaseOfCrust_gridZ,baseOfCrust(yGridMax),crustThickness(yGridMax),elevation(yGridMax)      real*8 tC(xGridMax,yGridMax),rho(xGridMax,yGridMax),cp(xGridMax,yGridMax),kond(xGridMax,yGridMax),		&              agen(xGridMax,yGridMax),kappa(xGridMax,yGridMax),told(xGridMax,yGridMax),dold(xGridMax,yGridMax),		&              xgrid_old(xGridMax,yGridMax)      real*8 tSurface,tSky,tSteady(yGridMax),R(yGridMax)      COMMON /THPROP/seaLevel,gridBottom,surface,nvert,LLower,			&     	gridZ,gridX,baseOfModel,qStar,tC,rho,cp,kond,agen,kappa,		&     	told,dold,tSurface,tSky,tSteady,r,referenceBaseOfCrust_meters,		&	ElevationMeters,							&     	referenceBaseOfCrust_gridZ,baseOfCrust,					&     	crustThickness,elevation,xgrid_old!***********************************************************      real*8 secMa      parameter (secMa=3.1536e13)!***********************************************************!     MISCELLANEOUS THINGS FOR COMMON      integer*4 iCount,kappaFofT      real*8 dTimeMa,dTimeSec,density,uconst,uz,isostasyFactor      COMMON /CMISC/dTimeMa,dTimeSec,iCount,kappaFofT,density,uconst,uz,isostasyFactor!***********************************************************!      DESCRIPTION OF THRUST FAULTS      INTEGER*4 nThrust             !number of thrust faults      INTEGER*4 nThrustMax                parameter (nThrustMax=20)! the number of the grid point of the thrust at each vertical section      integer thrustGridZ(nThrustMax,yGridMax)      real*8 dThrust(nThrustMax,yGridMax)    !depth of thrust fault (read in from file)      real*8 dThrustModelFile(nThrustMax,yGridMax)    !depth of thrust fault (read in from file)	character*7 FaultReference(nThrustMax)			! either 'surface' or 'sealeve'!!     Shear heating and qshear for each thrust      real*8 shear(nThrustMax),qShear(nThrustMax)      common /thrust1/nThrust,shear,qShear,dThrust,dThrustModelFile,thrustGridZ,FaultReference!***********************************************************!      DESCRIPTION OF ROCKS!! include file for rock record!!     nrocks----the number of rocks in the problem!     drock(n1,n2)--depth from surface (in meters)!           n1------rock#!           n2------step#!     RockGridz(n1,n2)--z grid point of the rock !     trock(n1,n2)--temperature of the rock!     RockGridx(n1,n2)-vertical section of the rock (x grid point)	integer maxRocksToAdd	parameter (maxRocksToAdd=50)      integer nRocks          !number of rocks we are tracking      integer mct             !The number of the "step" for rock tracking      real*8 dRock(maxRocksToAdd,nModelMax),tRock(maxRocksToAdd,nModelMax)      integer rockGridZ(maxRocksToAdd,nModelMax),rockGridX(maxRocksToAdd,nModelMax)      integer singleRockZ(nModelMax),singleRockX(nModelMax),singleRockTime(nModelMax),singleRockIndex(nModelMax)      integer rockColor(maxRocksToAdd)      real*8 rockTime(nModelMax)       !records time for each rock "step"      common /chrock/nRocks,mct,dRock,tRock,rockGridZ,rockGridX,rockTime,rockColor,	&     	singleRockZ,singleRockX,singleRockTime,singleRockIndex!***********************************************************      Integer*4 noLay(yGridMax)      real*8 zLLay(xGridMax,20),zuLay(xGridMax,20),rhoLay(xGridMax,20),cpLay(xGridMax,20),   &             kLay(xGridMax,20),agenLay(xGridMax,20),kappaLay(xGridMax,20)      COMMON /CLAY/noLay,zLLay,zuLay,rhoLay,cpLay,kLay,agenLay,kappaLay!*******************************************************************      character*256 tempFile,positionFile,modelinFull,modelin,directory,outfile      integer tempNum,pixelNumber,exaggeration      common /tMap/tempFile,tempNum,pixelNumber,exaggeration,positionFile,modelin,modelinFull,directory,outfile!*************************************	character*256 ppp	real*8 curve(xGridMax,yGridMax)	common /misc/ppp,curve!*************************************!     arrays for modelsetup - nModelMax steps max in model!	add a rock variables for each model step	integer*4 rocksToAdd(nModelMax),rocksToAdd_rockColor(nmodelMax,maxRocksToAdd)	real*8 rocksToAdd_dRock(nModelMax,maxRocksToAdd),rocksToAdd_rockGridZ(nmodelMax,maxRocksToAdd),     &	  	rocksToAdd_rockGridX(nModelMax,maxRocksToAdd)!	add a thrust variables	      integer*4 thrustDirection(nModelMax,nThrustMax),addAFault(nModelMax),nThrustModelStep(nModelMax)      character*3 thrustTopBot(nModelMax,nThrustMax)      real*8 relaxTime(nModelMax),erosionFactor(nModelMax)       integer*4 erosionSwitch(nModelMax),erode(nModelMax,xGridMax)!     Pluton variables      real*8 plutonUpperXm(nModelMax),plutonUpperZm(nModelMax),				&     	plutonLowerXm(nModelMax),plutonLowerZm(nModelMax)      integer plutonUpperX(nModelMax),plutonUpperZ(nModelMax),				&     	plutonLowerX(nModelMax),plutonLowerZ(nModelMax),plutonSwitch(nModelMax)      real*8 plutonT(nModelMax),plutonCp(nModelMax)	common/modelstuff/thrustDirection,relaxTime,addafault,nthrustmodelstep,erosionSwitch,ErosionFactor,	&     		erode,plutonUpperX,plutonUpperZ,plutonLowerX,plutonLowerZ,plutonSwitch,plutonT,plutonCp,	&      		plutonUpperXm,plutonUpperZm,plutonLowerXm,plutonLowerZm,thrustTopBot,				&     		rocksToAdd,rocksToAdd_rockGridX,rocksToAdd_dRock,rocksToAdd_rockGridZ,rocksToAdd_rockColor     